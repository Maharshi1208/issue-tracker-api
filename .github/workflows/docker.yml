name: Build & Push Docker images

on:
  push:
    branches: [main]
    tags: ['v*']               # Build automatically when you push tags like v1.0.0
  workflow_dispatch:           # Also allow manual runs (choose a ref/tag in the UI)

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [api, web]     # Build both images

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase owner
        id: lc
        run: echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      # Figure out which Dockerfile/context to use for each image
      - name: Set image context
        id: ctx
        run: |
          if [ "${{ matrix.target }}" = "api" ]; then
            echo "image=issue-tracker-api" >> $GITHUB_OUTPUT
            echo "context=." >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
          else
            echo "image=issue-tracker-web" >> $GITHUB_OUTPUT
            echo "context=client" >> $GITHUB_OUTPUT
            echo "dockerfile=client/Dockerfile" >> $GITHUB_OUTPUT
          fi

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate tags:
      #  - latest (only on main)
      #  - v1.2.3 and 1.2.3 (on tag builds)
      #  - sha-<shortsha> (always)
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ steps.lc.outputs.owner }}/${{ steps.ctx.outputs.image }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref,'refs/tags/v') }}
            type=semver,pattern=v{{version}},enable=${{ startsWith(github.ref,'refs/tags/v') }}
            type=sha

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ steps.ctx.outputs.context }}
          file: ${{ steps.ctx.outputs.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
