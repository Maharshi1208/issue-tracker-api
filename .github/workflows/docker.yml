name: Build & Push Docker images

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "client/**"
      - "package*.json"
      - "tsconfig.json"
      - "Dockerfile"
      - "client/Dockerfile"
      - ".github/workflows/docker.yml"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target: [api, web]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Lowercase owner for GHCR (required)
      - name: Lowercase owner
        id: lc
        run: echo "owner=${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT

      - name: Set image context
        id: ctx
        run: |
          if [ "${{ matrix.target }}" = "api" ]; then
            echo "image=issue-tracker-api" >> $GITHUB_OUTPUT
            echo "context=." >> $GITHUB_OUTPUT
            echo "dockerfile=Dockerfile" >> $GITHUB_OUTPUT
          else
            echo "image=issue-tracker-web" >> $GITHUB_OUTPUT
            echo "context=client" >> $GITHUB_OUTPUT
            echo "dockerfile=client/Dockerfile" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: ${{ steps.ctx.outputs.context }}
          file: ${{ steps.ctx.outputs.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: |
            ghcr.io/${{ steps.lc.outputs.owner }}/${{ steps.ctx.outputs.image }}:latest
            ghcr.io/${{ steps.lc.outputs.owner }}/${{ steps.ctx.outputs.image }}:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
